[
    {
      "id": 1,
      "body": "次のプログラム中の空欄に入れる正しい答えを、解答群の中から選べ。関数 maximum は、異なる三つの整数を引数で受け取り、そのうちの最大値を返す。\n\n〔プログラム〕\n○整数型: maximum(整数型: x, 整数型: y, 整数型: z)\n  if ( ＿＿＿ ) \n    return x \n  elseif (y > z) \n    return y \n  else \n    return z \n  endif",
      "choices": [
        {
          "text": "ア: x > y",
          "explanation": "不正解。この条件だけでは、xがzより大きいかどうかが不明なため、xが最大値であると断定できません。"
        },
        {
          "text": "イ: x > y and x > z",
          "explanation": "正解。この条件が真であれば、xはyとzの両方より大きいことが確定するため、xが最大値となります。この条件が偽の場合、残りのelseif文でyとzの比較が行われ、正しく最大値が返されます。"
        },
        {
          "text": "ウ: x > y and y > z",
          "explanation": "不正解。この条件は x > y > z を意味しますが、z > x > y のような場合にxが最大値ではないのに条件が偽になるなど、全てのパターンを網羅できません。"
        },
        {
          "text": "エ: x > z",
          "explanation": "不正解。この条件だけでは、xがyより大きいかどうかが不明なため、xが最大値であると断定できません。"
        },
        {
          "text": "オ: x > z and z > y",
          "explanation": "不正解。この条件は x > z > y を意味しますが、y > x > z のような場合にxが最大値ではないのに条件が偽になるなど、全てのパターンを網羅できません。"
        },
        {
          "text": "カ: z > y",
          "explanation": "不正解。この条件はxの値を評価していないため、不適切です。"
        }
      ],
      "correctChoiceIndex": 1
    },
    {
      "id": 2,
      "body": "次のプログラム中の空欄に入れる正しい答えを、解答群の中から選べ。関数 convDecimal は、引数として与えられた、「0」と「1」だけから成る、1文字以上の文字列を、符号なしの2進数と解釈したときの整数値を返す。例えば、引数として「10010」を与えると18が返る。関数 convDecimal が利用する関数 int は、引数で与えられた文字が「0」なら整数値0を返し、「1」なら整数値1を返す。\n\n〔プログラム〕\n○整数型: convDecimal(文字列型: binary)\n  整数型: i, length, result ← 0 \n  length ← binaryの文字数 \n  for (i を 1 から length まで 1 ずつ増やす)\n    result ← ＿＿＿ \n  endfor \n  return result",
      "choices": [
        {
          "text": "ア: result ＋ int(binary の (length － i ＋ 1)文字目の文字)",
          "explanation": "不正解。2進数の各桁の重み（2のべき乗）が考慮されていません。これでは単純なビットの合計値になってしまいます。"
        },
        {
          "text": "イ: result ＋ int(binary の i文字目の文字)",
          "explanation": "不正解。2進数の各桁の重み（2のべき乗）が考慮されていません。これでは単純なビットの合計値になってしまいます。"
        },
        {
          "text": "ウ: result × 2 ＋ int(binary の (length － i ＋ 1)文字目の文字)",
          "explanation": "不正解。この式は文字列を末尾から（右から）処理する場合に有効ですが、プログラムのforループはiが1からlengthへ、つまり文字列の先頭から（左から）処理するため不適切です。"
        },
        {
          "text": "エ: result × 2 ＋ int(binary の i文字目の文字)",
          "explanation": "正解。2進数文字列を左（最上位ビット）から右に見ていく場合、現在の結果を2倍（左に1ビットシフト）して新しいビットの値を加える、という操作を繰り返すことで10進数に変換できます。これは基数変換の一般的なアルゴリズムです。"
        }
      ],
      "correctChoiceIndex": 3
    },
    {
      "id": 4,
      "body": "次の記述中の空欄に入れる正しい答えを、解答群の中から選べ。ここで、配列の要素番号は1から始まる。関数 merge は、昇順に整列された整数型の配列 data1 及び data2 を受け取り、これらを併合してできる昇順に整列された整数型の配列を返す。関数 merge を merge({2, 3}, {1, 4}) として呼び出すと，/*** α ***/ の行は [ ＿＿＿ ] 。\n\n〔プログラム〕\n○整数型の配列: merge(整数型の配列: data1, 整数型の配列: data2)\n 整数型: n1 ← data1の要素数\n 整数型: n2 ← data2の要素数\n 整数型の配列: work ← {(n1 ＋ n2)個の 未定義の値}\n 整数型: i ← 1\n 整数型: j ← 1\n 整数型: k ← 1\n while ((i ≦ n1) and (j ≦ n2))\n if (data1[i] ≦ data2[j])\n work[k] ← data1[i]\n i ← i ＋ 1\n else\n work[k] ← data2[j]\n j ← j ＋ 1\n endif\n k ← k ＋ 1\n endwhile\nwhile (i ≦ n1)\n work[k] ← data1[i]\n i ← i ＋ 1\n k ← k ＋ 1\n endwhile\n while (j ≦ n2)\n work[k] ← data2[j] /*** α ***/\n j ← j ＋ 1\n k ← k ＋ 1\n endwhile\n return work",
      "choices": [
        {
          "text": "ア: 実行されない",
          "explanation": "不正解。data1の全要素が処理された後もdata2に要素が残っているため、このループは実行されます。"
        },
        {
          "text": "イ: 1 回実行される",
          "explanation": "正解。data1の{2, 3}とdata2の{1, 4}をマージすると、最初のwhileループで{1, 2, 3}がwork配列に格納されます。この時点でdata1の全要素が処理され、data2には{4}が残ります。その後、data1の残りを処理するループはスキップされ、data2の残りを処理する/*** α ***/を含むループが1回だけ実行されて{4}が格納されます。"
        },
        {
          "text": "ウ: 2 回実行される",
          "explanation": "不正解。data2に残っている要素は{4}の一つだけなので、ループは1回しか実行されません。"
        },
        {
          "text": "エ: 3 回実行される",
          "explanation": "不正解。data2に残っている要素は一つだけです。"
        }
      ],
      "correctChoiceIndex": 1
    },
    {
      "id": 5,
      "body": "次のプログラム中のa～cに入れる正しい答えの組合せを、解答群の中から選べ。ここで、配列の要素番号は1から始まる。(問題文の詳細は省略)",
      "choices": [
        {
          "text": "ア: a: arrayK[i], b: arrayM[i], c: allItemsの要素数",
          "explanation": "不正解。aとbの役割が逆で、cの全注文数の取得方法が誤っています。"
        },
        {
          "text": "イ: a: arrayK[i], b: arrayM[i], c: ordersの要素数",
          "explanation": "不正解。aとbの役割が逆です。"
        },
        {
          "text": "ウ: a: arrayK[i], b: arrayM[i], c: otherItemsの要素数",
          "explanation": "不正解。aとbの役割が逆で、cの全注文数の取得方法が誤っています。"
        },
        {
          "text": "エ: a: arrayM[i], b: arrayK[i], c: allItemsの要素数",
          "explanation": "不正解。cの全注文数の取得方法が誤っています。allItemsは商品の種類数です。"
        },
        {
          "text": "オ: a: arrayM[i], b: arrayK[i], c: ordersの要素数",
          "explanation": "正解。aは基準商品itemとotherItems[i]が同時に購入された回数(Mxy)を数えるのでarrayM[i]、bはotherItems[i]が購入された回数(Ky)を数えるのでarrayK[i]、cは関連度の計算式における全注文数なのでordersの要素数となります。"
        },
        {
          "text": "カ: a: arrayM[i], b: arrayK[i], c: otherItemsの要素数",
          "explanation": "不正解。cの全注文数の取得方法が誤っています。otherItemsは基準商品を除いた商品の種類数です。"
        }
      ],
      "correctChoiceIndex": 4
    },
    {
      "id": 6,
      "body": "A社は従業員450名の商社であり、... (中略) ... テレワークでA社利用クラウドサービスに接続する場合には、A社の社内ネットワークも社内PCも介さずに直接接続することを可能にするネットワークの設定変更を実施することにした。設定変更に当たり、... (中略) ... A社利用クラウドサービスへの不正アクセスのリスクが増加することが分かった。そこでBさんは、リスクを低減するために、情報システム部に対策を依頼することにした。\n\n設問 次の対策のうち、情報システム部に依頼することにしたものはどれか。解答群のうち、最も適切なものを選べ。",
      "choices": [
        {
          "text": "ア: A社の社内ネットワークからA社利用クラウドサービスへの通信を監視する。",
          "explanation": "不正解。設定変更後は、社内ネットワークを介さずに直接クラウドサービスへ接続するため、社内ネットワークを監視しても意味がありません。"
        },
        {
          "text": "イ: A社の社内ネットワークとA社利用クラウドサービスとの間の通信速度を制限する。",
          "explanation": "不正解。これはセキュリティ対策ではなく、また、直接接続するため社内ネットワークは経由しません。"
        },
        {
          "text": "ウ: A社利用クラウドサービスにA社外から接続する際の認証に2要素認証を導入する。",
          "explanation": "正解。社内ネットワークという境界がなくなり、どこからでもアクセスできるようになるため、ID/パスワードだけでは不正アクセスのリスクが増大します。知識情報（パスワード）に加えて、所持情報（スマートフォンアプリなど）を要求する2要素認証を導入することが、本人確認を強化する最も有効な対策です。"
        },
        {
          "text": "エ: A社利用クラウドサービスのうち、A社利用グループウェアだけを直接接続の対象とする。",
          "explanation": "不正解。リスクの対象を限定するだけで、不正アクセスのリスクそのものを低減する根本的な対策にはなりません。"
        },
        {
          "text": "オ: 専用アプリの保存禁止機能を無効にする。",
          "explanation": "不正解。これは私有PCへの情報漏えいリスクを高めることになるため、逆効果です。"
        }
      ],
      "correctChoiceIndex": 2
    }
  ]